{"version":3,"sources":["xml-parsers.js"],"names":["options","explicitRoot","ignoreAttrs","parseXml","xml","result","error","parser","xml2js","Parser","parseString","e","r","Error","parseError","headerInfo","xmlError","xmlobj","message","_","each","n","key","toLowerCase","errors","S3Error","value","parseCopyObject","etag","lastModified","ETag","replace","LastModified","Date","parseListMultipart","uploads","prefixes","isTruncated","IsTruncated","NextKeyMarker","nextKeyMarker","NextUploadIdMarker","nextUploadIdMarker","CommonPrefixes","forEach","prefix","push","Upload","upload","Key","uploadId","UploadId","initiated","Initiated","parseListBucket","Buckets","Bucket","bucket","name","Name","creationDate","CreationDate","parseBucketNotification","TopicConfiguration","QueueConfiguration","CloudFunctionConfiguration","genEvents","events","s3event","genFilterRules","filters","S3Key","FilterRule","rule","Value","config","Id","Topic","Event","Filter","Queue","CloudFunction","parseBucketRegion","parseListParts","parts","marker","undefined","NextPartNumberMarker","Part","p","part","PartNumber","parseInitiateMultipart","InvalidXMLError","parseCompleteMultipart","Location","location","Code","Message","errCode","errMessage","parseListObjects","objects","nextMarker","Contents","content","size","Size","commonPrefix","Prefix","NextMarker","parseListObjectsV2","NextContinuationToken","nextContinuationToken","parseListObjectsV2WithMetadata","metadata","UserMetadata"],"mappings":"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","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport xml2js from 'xml2js'\nimport _ from 'lodash'\nimport * as errors from './errors.js'\n\nvar options = {  // options passed to xml2js parser\n  explicitRoot: false,    // return the root node in the resulting object?\n  ignoreAttrs: true,     // ignore attributes, only create text nodes\n}\n\nvar parseXml = (xml) => {\n  var result = null\n  var error = null\n\n  var parser = new xml2js.Parser(options)\n  parser.parseString(xml, function (e, r) {\n    error = e\n    result = r\n  })\n\n  if (error) {\n    throw new Error('XML parse error')\n  }\n  return result\n}\n\n// Parse XML and return information as Javascript types\n\n// parse error XML response\nexport function parseError(xml, headerInfo) {\n  var xmlError = {}\n  var xmlobj = parseXml(xml)\n  var message\n  _.each(xmlobj, (n, key) => {\n    if (key === 'Message') {\n      message = xmlobj[key][0]\n      return\n    }\n    xmlError[key.toLowerCase()] = xmlobj[key][0]\n  })\n  var e = new errors.S3Error(message)\n  _.each(xmlError, (value, key) => {\n    e[key] = value\n  })\n  _.each(headerInfo, (value, key) => {\n    e[key] = value\n  })\n  return e\n}\n\n// parse XML response for copy object\nexport function parseCopyObject(xml) {\n  var result = {\n    etag: \"\",\n    lastModified: \"\"\n  }\n  var xmlobj = parseXml(xml)\n  if (xmlobj.ETag) result.etag = xmlobj.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n    .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n    .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n  if (xmlobj.LastModified) result.lastModified = new Date(xmlobj.LastModified[0])\n\n  return result\n}\n\n// parse XML response for listing in-progress multipart uploads\nexport function parseListMultipart(xml) {\n  var result = {\n    uploads: [],\n    prefixes: [],\n    isTruncated: false\n  }\n  var xmlobj =  parseXml(xml)\n  if (xmlobj.IsTruncated && xmlobj.IsTruncated[0] === 'true') result.isTruncated = true\n  if (xmlobj.NextKeyMarker) result.nextKeyMarker =  xmlobj.NextKeyMarker[0]\n  if (xmlobj.NextUploadIdMarker) result.nextUploadIdMarker = xmlobj.NextUploadIdMarker[0]\n  if (xmlobj.CommonPrefixes) xmlobj.CommonPrefixes.forEach(prefix => {\n    result.prefixes.push({prefix: prefix[0]})\n  })\n  if (xmlobj.Upload) xmlobj.Upload.forEach(upload => {\n    result.uploads.push({\n      key: upload.Key[0],\n      uploadId: upload.UploadId[0],\n      initiated: new Date(upload.Initiated[0])\n    })\n  })\n  return result\n}\n\n// parse XML response to list all the owned buckets\nexport function parseListBucket(xml) {\n  var result = []\n  var xmlobj = parseXml(xml)\n  if (xmlobj.Buckets) {\n    if (xmlobj.Buckets[0].Bucket) {\n      xmlobj.Buckets[0].Bucket.forEach(bucket => {\n        var name = bucket.Name[0]\n        var creationDate = new Date(bucket.CreationDate[0])\n        result.push({name, creationDate})\n      })\n    }\n  }\n  return result\n}\n\n// parse XML response for bucket notification\nexport function parseBucketNotification(xml) {\n  var result = {\n    TopicConfiguration  : [],\n    QueueConfiguration  : [],\n    CloudFunctionConfiguration : [],\n  }\n  // Parse the events list\n  var genEvents = function(events) {\n    var result = []\n    if (events) {\n      events.forEach(s3event => {\n        result.push(s3event)\n      })\n    }\n    return result\n  }\n  // Parse all filter rules\n  var genFilterRules = function(filters) {\n    var result = []\n    if (filters && filters[0].S3Key && filters[0].S3Key[0].FilterRule) {\n      filters[0].S3Key[0].FilterRule.forEach(rule => {\n        var Name = rule.Name[0]\n        var Value = rule.Value[0]\n        result.push({Name, Value})\n      })\n    }\n    return result\n  }\n\n  var xmlobj = parseXml(xml)\n\n  // Parse all topic configurations in the xml\n  if (xmlobj.TopicConfiguration) {\n    xmlobj.TopicConfiguration.forEach(config => {\n      var Id = config.Id[0]\n      var Topic = config.Topic[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.TopicConfiguration.push({ Id, Topic, Event, Filter})\n    })\n  }\n  // Parse all topic configurations in the xml\n  if (xmlobj.QueueConfiguration) {\n    xmlobj.QueueConfiguration.forEach(config => {\n      var Id = config.Id[0]\n      var Queue = config.Queue[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.QueueConfiguration.push({ Id, Queue, Event, Filter})\n    })\n  }\n  // Parse all QueueConfiguration arrays\n  if (xmlobj.CloudFunctionConfiguration) {\n    xmlobj.CloudFunctionConfiguration.forEach(config => {\n      var Id = config.Id[0]\n      var CloudFunction = config.CloudFunction[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.CloudFunctionConfiguration.push({ Id, CloudFunction, Event, Filter})\n    })\n  }\n\n  return result\n}\n\n// parse XML response for bucket region\nexport function parseBucketRegion(xml) {\n  return parseXml(xml)\n}\n\n// parse XML response for list parts of an in progress multipart upload\nexport function parseListParts(xml) {\n  var xmlobj = parseXml(xml)\n  var result = {\n    isTruncated: false,\n    parts: [],\n    marker: undefined\n  }\n  if (xmlobj.IsTruncated && xmlobj.IsTruncated[0] === 'true') result.isTruncated = true\n  if (xmlobj.NextPartNumberMarker) result.marker = +xmlobj.NextPartNumberMarker[0]\n  if (xmlobj.Part) {\n    xmlobj.Part.forEach(p => {\n      var part = +p.PartNumber[0]\n      var lastModified = new Date(p.LastModified[0])\n      var etag = p.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n      result.parts.push({part, lastModified, etag})\n    })\n  }\n  return result\n}\n\n// parse XML response when a new multipart upload is initiated\nexport function parseInitiateMultipart(xml) {\n  var xmlobj = parseXml(xml)\n  if (xmlobj.UploadId) return xmlobj.UploadId[0]\n  throw new errors.InvalidXMLError('UploadId missing in XML')\n}\n\n// parse XML response when a multipart upload is completed\nexport function parseCompleteMultipart(xml) {\n  var xmlobj = parseXml(xml)\n  if (xmlobj.Location) {\n    var location = xmlobj.Location[0]\n    var bucket = xmlobj.Bucket[0]\n    var key = xmlobj.Key[0]\n    var etag = xmlobj.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n      .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n      .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n\n    return {location, bucket, key, etag}\n  }\n  // Complete Multipart can return XML Error after a 200 OK response\n  if (xmlobj.Code && xmlobj.Message) {\n    var errCode = xmlobj.Code[0]\n    var errMessage = xmlobj.Message[0]\n    return {errCode, errMessage}\n  }\n}\n\n// parse XML response for list objects in a bucket\nexport function parseListObjects(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var nextMarker\n  var xmlobj = parseXml(xml)\n  if (xmlobj.IsTruncated && xmlobj.IsTruncated[0] === 'true') result.isTruncated = true\n  if (xmlobj.Contents) {\n    xmlobj.Contents.forEach(content => {\n      var name = content.Key[0]\n      var lastModified = new Date(content.LastModified[0])\n      var etag = content.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n      var size = +content.Size[0]\n      result.objects.push({name, lastModified, etag, size})\n      nextMarker = name\n    })\n  }\n  if (xmlobj.CommonPrefixes) {\n    xmlobj.CommonPrefixes.forEach(commonPrefix => {\n      var prefix = commonPrefix.Prefix[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  if (result.isTruncated) {\n    result.nextMarker = xmlobj.NextMarker ? xmlobj.NextMarker[0]: nextMarker\n  }\n  return result\n}\n\n// parse XML response for list objects v2 in a bucket\nexport function parseListObjectsV2(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var xmlobj = parseXml(xml)\n  if (xmlobj.IsTruncated && xmlobj.IsTruncated[0] === 'true') result.isTruncated = true\n  if (xmlobj.NextContinuationToken) result.nextContinuationToken = xmlobj.NextContinuationToken[0]\n\n  if (xmlobj.Contents) {\n    xmlobj.Contents.forEach(content => {\n      var name = content.Key[0]\n      var lastModified = new Date(content.LastModified[0])\n      var etag = content.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n      var size = +content.Size[0]\n      result.objects.push({name, lastModified, etag, size})\n    })\n  }\n  if (xmlobj.CommonPrefixes) {\n    xmlobj.CommonPrefixes.forEach(commonPrefix => {\n      var prefix = commonPrefix.Prefix[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  return result\n}\n\n// parse XML response for list objects v2 with metadata in a bucket\nexport function parseListObjectsV2WithMetadata(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var xmlobj = parseXml(xml)\n  if (xmlobj.IsTruncated && xmlobj.IsTruncated[0] === 'true') result.isTruncated = true\n  if (xmlobj.NextContinuationToken) result.nextContinuationToken = xmlobj.NextContinuationToken[0]\n\n  if (xmlobj.Contents) {\n    xmlobj.Contents.forEach(content => {\n      var name = content.Key[0]\n      var lastModified = new Date(content.LastModified[0])\n      var etag = content.ETag[0].replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/^&#34;$/g, '')\n      var size = +content.Size[0]\n      var metadata\n      if (content.UserMetadata != null) {\n        metadata = content.UserMetadata[0]\n      } else {\n        metadata = null\n      }\n      result.objects.push({name, lastModified, etag, size, metadata})\n    })\n  }\n  if (xmlobj.CommonPrefixes) {\n    xmlobj.CommonPrefixes.forEach(commonPrefix => {\n      var prefix = commonPrefix.Prefix[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  return result\n}\n\n"],"file":"xml-parsers.js"}