{"version":3,"sources":["functional/functional-tests.js"],"names":[],"mappings":"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","file":"functional-tests.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst os = require('os')\nconst stream = require('stream')\nconst crypto = require('crypto')\nconst async = require('async')\nconst _ = require('lodash')\nconst fs = require('fs')\nconst http = require('http')\nconst https = require('https')\nconst url = require('url')\nconst chai = require('chai')\nconst assert = chai.assert\nconst superagent = require('superagent')\nconst uuid = require(\"uuid\")\nconst step = require(\"mocha-steps\").step\nlet minio\n\ntry {\n  minio = require('../../../dist/main/minio')\n} catch (err) {\n  minio = require('minio')\n}\n\nrequire('source-map-support').install()\n\ndescribe('functional tests', function() {\n  this.timeout(30 * 60 * 1000)\n  var playConfig = {}\n  // If credentials aren't given, default to play.minio.io.\n  if (process.env['SERVER_ENDPOINT']) {\n    var res = process.env['SERVER_ENDPOINT'].split(\":\")\n    playConfig.endPoint = res[0]\n    playConfig.port = parseInt(res[1])\n  } else {\n    playConfig.endPoint = 'play.minio.io'\n    playConfig.port = 9000\n  }\n  playConfig.accessKey = process.env['ACCESS_KEY'] || 'Q3AM3UQ867SPQQA43P2F'\n  playConfig.secretKey = process.env['SECRET_KEY'] || 'zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG'\n\n  // If the user provides ENABLE_HTTPS, 1 = secure, anything else = unsecure.\n  // Otherwise default useSSL as true.\n  if (process.env['ENABLE_HTTPS'] !== undefined) {\n    playConfig.useSSL = (process.env['ENABLE_HTTPS'] == '1')\n  } else {\n    playConfig.useSSL = true\n  }\n\n  // dataDir is falsy if we need to generate data on the fly. Otherwise, it will be\n  // a directory with files to read from, i.e. /mint/data.\n  var dataDir = process.env['MINT_DATA_DIR']\n\n  var client = new minio.Client(playConfig)\n  var usEastConfig = playConfig\n  usEastConfig.region = 'us-east-1'\n  var clientUsEastRegion = new minio.Client(usEastConfig)\n\n  var bucketName = \"minio-js-test-\" + uuid.v4()\n  var objectName = uuid.v4()\n\n  var _1byteObjectName = 'datafile-1-b'\n  var _1byte = dataDir ? fs.readFileSync(dataDir + '/' + _1byteObjectName) : (new Buffer(1)).fill(0)\n\n  var _100kbObjectName = 'datafile-100-kB'\n  var _100kb = dataDir ? fs.readFileSync(dataDir + '/' + _100kbObjectName) : (new Buffer(100 * 1024)).fill(0)\n  var _100kbObjectNameCopy = _100kbObjectName + '-copy'\n\n  var _100kbObjectBufferName = `${_100kbObjectName}.buffer`\n  var _MultiPath100kbObjectBufferName = `path/to/${_100kbObjectName}.buffer`\n  var _100kbmd5 = crypto.createHash('md5').update(_100kb).digest('hex')\n  var _100kb1kboffsetmd5 = crypto.createHash('md5').update(_100kb.slice(1024)).digest('hex')\n\n  var _6mbObjectName = 'datafile-6-MB'\n  var _6mb = dataDir ? fs.readFileSync(dataDir + '/' + _6mbObjectName) : (new Buffer(6 * 1024 * 1024)).fill(0)\n  var _6mbmd5 = crypto.createHash('md5').update(_6mb).digest('hex')\n  var _6mbObjectNameCopy = _6mbObjectName + '-copy'\n\n  var _5mbObjectName = 'datafile-5-MB'\n  var _5mb = dataDir ? fs.readFileSync(dataDir + '/' + _5mbObjectName) : (new Buffer(5 * 1024 * 1024)).fill(0)\n  var _5mbmd5 = crypto.createHash('md5').update(_5mb).digest('hex')\n\n  var metaData = {\n    'Content-Type': 'text/html',\n    'Content-Language': 123,\n    'X-Amz-Meta-Testing': 1234,\n    'randomstuff': 5678\n  }\n\n  var tmpDir = os.tmpdir()\n\n  var traceStream\n\n  // FUNCTIONAL_TEST_TRACE env variable contains the path to which trace\n  // will be logged. Set it to /dev/stdout log to the stdout.\n  if (process.env['FUNCTIONAL_TEST_TRACE']) {\n    var filePath = process.env['FUNCTIONAL_TEST_TRACE']\n    // This is necessary for windows.\n    if (filePath === 'process.stdout') {\n      traceStream = process.stdout\n    } else {\n      traceStream = fs.createWriteStream(filePath, { flags: 'a' })\n    }\n    traceStream.write('====================================\\n')\n    client.traceOn(traceStream)\n  }\n\n  before(done => client.makeBucket(bucketName, '', done))\n  after(done => client.removeBucket(bucketName, done))\n\n  if (traceStream) {\n    after(() => {\n      client.traceOff()\n      if (filePath !== 'process.stdout') {\n        traceStream.end()\n      }\n    })\n  }\n\n  describe('makeBucket with period and region', () => {\n    if (playConfig.endPoint === 's3.amazonaws.com') {\n      step('makeBucket(bucketName, region, cb)_region:eu-central-1_', done => client.makeBucket(`${bucketName}.sec.period`,\n                                                                                                'eu-central-1', done))\n      step('removeBucket(bucketName, cb)__', done => client.removeBucket(`${bucketName}.sec.period`, done))\n    }\n  })\n\n  describe('listBuckets', () => {\n    step('listBuckets(cb)__', done => {\n      client.listBuckets((e, buckets) => {\n        if (e) return done(e)\n        if (_.find(buckets, { name: bucketName })) return done()\n        done(new Error('bucket not found'))\n      })\n    })\n    step('listBuckets()__', done => {\n      client.listBuckets()\n        .then(buckets => {\n          if (!_.find(buckets, { name: bucketName }))\n            return done(new Error('bucket not found'))\n        })\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n  describe('makeBucket with region', () => {\n    step(`makeBucket(bucketName, region, cb)_bucketName:${bucketName}-region, region:us-east-2_`, done => {\n      try {\n        clientUsEastRegion.makeBucket(`${bucketName}-region`, 'us-east-2', assert.fail)\n      } catch (e) {\n        done()\n      }\n    })\n    step(`makeBucket(bucketName, region, cb)_bucketName:${bucketName}-region, region:us-east-1_`, done => {\n      clientUsEastRegion.makeBucket(`${bucketName}-region`, 'us-east-1', done)\n    })\n    step(`removeBucket(bucketName, cb)_bucketName:${bucketName}-region_`, done => {\n      clientUsEastRegion.removeBucket(`${bucketName}-region`, done)\n    })\n    step(`makeBucket(bucketName, region)_bucketName:${bucketName}-region, region:us-east-1_`, done => {\n      clientUsEastRegion.makeBucket(`${bucketName}-region`, 'us-east-1', (e)=>{\n        if (e) {\n          // Some object storage servers like Azure, might not delete a bucket rightaway\n          // Add a sleep of 40 seconds and retry\n          setTimeout(() => {\n            clientUsEastRegion.makeBucket(`${bucketName}-region`, 'us-east-1', done)\n          }, 40 * 1000)\n        } else done()\n      })\n    })\n    step(`removeBucket(bucketName)_bucketName:${bucketName}-region_`, done => {\n      clientUsEastRegion.removeBucket(`${bucketName}-region`)\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n  describe('bucketExists', () => {\n    step(`bucketExists(bucketName, cb)_bucketName:${bucketName}_`, done => client.bucketExists(bucketName, done))\n    step(`bucketExists(bucketName, cb)_bucketName:${bucketName}random_`, done => {\n      client.bucketExists(bucketName + 'random', (e, exists) => {\n        if (e === null && !exists) return done()\n        done(new Error())\n      })\n    })\n    step(`bucketExists(bucketName)_bucketName:${bucketName}_`, done => {\n      client.bucketExists(bucketName)\n        .then(() => done())\n        .catch(done)\n    })\n  })\n\n\n  describe('removeBucket', () => {\n    step(`removeBucket(bucketName, cb)_bucketName:${bucketName}random_`, done => {\n      client.removeBucket(bucketName + 'random', (e) => {\n        if (e.code === 'NoSuchBucket') return done()\n        done(new Error())\n      })\n    })\n    step(`makeBucket(bucketName, region)_bucketName:${bucketName}-region-1, region:us-east-1_`, done => {\n      client.makeBucket(`${bucketName}-region-1`, 'us-east-1')\n        .then(() => client.removeBucket(`${bucketName}-region-1`))\n        .then(() => done())\n        .catch(done)\n    })\n  })\n  describe('tests for putObject getObject removeObject with multipath', function() {\n    step(`putObject(bucketName, objectName, stream)_bucketName:${bucketName}, objectName:${_MultiPath100kbObjectBufferName}, stream:100Kib_`, done => {\n      client.putObject(bucketName, _MultiPath100kbObjectBufferName, _100kb)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`getObject(bucketName, objectName, callback)_bucketName:${bucketName}, objectName:${_MultiPath100kbObjectBufferName}_`, done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _MultiPath100kbObjectBufferName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    step(`removeObject(bucketName, objectName)_bucketName:${bucketName}, objectName:${_MultiPath100kbObjectBufferName}_`, done => {\n      client.removeObject(bucketName, _MultiPath100kbObjectBufferName)\n        .then(() => done())\n        .catch(done)\n    })\n\n  })\n  describe('tests for putObject copyObject getObject getPartialObject statObject removeObject', function() {\n\n    var tmpFileUpload = `${tmpDir}/${_100kbObjectName}`\n    step(`fPutObject(bucketName, objectName, filePath, metaData, callback)_bucketName:${bucketName}, objectName:${_100kbObjectName}, filePath: ${tmpFileUpload}_`, done => {\n      fs.writeFileSync(tmpFileUpload, _100kb)\n      client.fPutObject(bucketName, _100kbObjectName, tmpFileUpload,done)\n    })\n\n    step(`putObject(bucketName, objectName, stream, size, metaData, callback)_bucketName:${bucketName}, objectName:${_100kbObjectName}, stream:100kb, size:${_100kb.length}, metaData:${metaData}_`, done => {\n      var stream = readableStream(_100kb)\n      client.putObject(bucketName, _100kbObjectName, stream, _100kb.length, metaData, done)\n    })\n\n    step(`putObject(bucketName, objectName, stream, size, metaData, callback)_bucketName:${bucketName}, objectName:${_100kbObjectName}, stream:100kb, size:${_100kb.length}_`, done => {\n      var stream = readableStream(_100kb)\n      client.putObject(bucketName, _100kbObjectName, stream, _100kb.length, done)\n    })\n\n    step(`getObject(bucketName, objectName, callback)_bucketName:${bucketName}, objectName:${_100kbObjectName}_`, done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _100kbObjectName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    step(`putObject(bucketName, objectName, stream, callback)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}, stream:100kb_`, done => {\n      client.putObject(bucketName, _100kbObjectBufferName, _100kb, '', done)\n    })\n\n    step(`getObject(bucketName, objectName, callback)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}_`, done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _100kbObjectBufferName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _100kbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    step(`putObject(bucketName, objectName, stream, metaData)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}, stream:100kb_, metaData:{}`, done => {\n      client.putObject(bucketName, _100kbObjectBufferName, _100kb, {})\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`getPartialObject(bucketName, objectName, offset, length, cb)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}, offset:0, length=1024_`, done => {\n      client.getPartialObject(bucketName, _100kbObjectBufferName, 0, 1024)\n        .then(stream => {\n          stream.on('data', function() {})\n          stream.on('end', done)\n        })\n        .catch(done)\n    })\n\n    step(`getPartialObject(bucketName, objectName, offset, length, cb)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}, offset:1024, length=1024_`, done => {\n      var expectedHash = crypto.createHash('md5').update(_100kb.slice(1024,2048)).digest('hex')\n      var hash = crypto.createHash('md5')\n      client.getPartialObject(bucketName, _100kbObjectBufferName, 1024, 1024)\n        .then(stream => {\n          stream.on('data', data => hash.update(data))\n          stream.on('end', () => {\n            if (hash.digest('hex') === expectedHash) return done()\n            done(new Error('content mismatch'))\n          })\n        })\n        .catch(done)\n    })\n\n    step(`getPartialObject(bucketName, objectName, offset, length, cb)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}, offset:1024`, done => {\n      var hash = crypto.createHash('md5')\n      client.getPartialObject(bucketName, _100kbObjectBufferName, 1024)\n        .then(stream => {\n          stream.on('data', data => hash.update(data))\n          stream.on('end', () => {\n            if (hash.digest('hex') === _100kb1kboffsetmd5) return done()\n            done(new Error('content mismatch'))\n          })\n        })\n        .catch(done)\n    })\n\n    step(`getObject(bucketName, objectName)_bucketName:${bucketName}, objectName:${_100kbObjectBufferName}_`, done => {\n      client.getObject(bucketName, _100kbObjectBufferName)\n        .then(stream => {\n          stream.on('data', function() {})\n          stream.on('end', done)\n        })\n        .catch(done)\n    })\n\n    step(`putObject(bucketName, objectName, stream, cb)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, done => {\n      var stream = readableStream(_6mb)\n      client.putObject(bucketName, _6mbObjectName, stream, done)\n    })\n\n    step(`getObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, done => {\n      var hash = crypto.createHash('md5')\n      client.getObject(bucketName, _6mbObjectName, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === _6mbmd5) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    step(`getObject(bucketName, objectName, cb)_bucketName:${bucketName} non-existent object`, done => {\n      client.getObject(bucketName, 'an-object-that-does-not-exist', (e, stream) => {\n        if (stream) return done(new Error(\"on errors the stream object should not exist\"))\n        if (!e) return done(new Error(\"expected an error object\"))\n        if (e.code !== 'NoSuchKey') return done(new Error(\"expected NoSuchKey error\"))\n        done()\n      })\n    })\n\n    step(`getPartialObject(bucketName, objectName, offset, length, cb)_bucketName:${bucketName}, objectName:${_6mbObjectName}, offset:0, length:100*1024_`, done => {\n      var hash = crypto.createHash('md5')\n      var expectedHash = crypto.createHash('md5').update(_6mb.slice(0,100*1024)).digest('hex')\n      client.getPartialObject(bucketName, _6mbObjectName, 0, 100*1024, (e, stream) => {\n        if (e) return done(e)\n        stream.on('data', data => hash.update(data))\n        stream.on('error', done)\n        stream.on('end', () => {\n          if (hash.digest('hex') === expectedHash) return done()\n          done(new Error('content mismatch'))\n        })\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, cb)_bucketName:${bucketName}, objectName:${_6mbObjectNameCopy}, srcObject:/${bucketName}/${_6mbObjectName}_`, done => {\n      client.copyObject(bucketName, _6mbObjectNameCopy, \"/\" + bucketName + \"/\" + _6mbObjectName, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject)_bucketName:${bucketName}, objectName:${_6mbObjectNameCopy}, srcObject:/${bucketName}/${_6mbObjectName}_`, done => {\n      client.copyObject(bucketName, _6mbObjectNameCopy, \"/\" + bucketName + \"/\" + _6mbObjectName)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`statObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, done => {\n      client.statObject(bucketName, _6mbObjectName, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _6mb.length) return done(new Error('size mismatch'))\n        done()\n      })\n    })\n\n    step(`statObject(bucketName, objectName)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, done => {\n      client.statObject(bucketName, _6mbObjectName)\n        .then(stat => {\n          if (stat.size !== _6mb.length)\n            return done(new Error('size mismatch'))\n        })\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`removeObject(bucketName, objectName)_bucketName:${bucketName}, objectName:${_100kbObjectName}_`, done => {\n      client.removeObject(bucketName, _100kbObjectName)\n        .then(function() {\n          async.map([_100kbObjectBufferName, _6mbObjectName, _6mbObjectNameCopy], (objectName, cb) => client.removeObject(bucketName, objectName, cb), done)\n        })\n        .catch(done)\n    })\n\n  })\n\n  describe('tests for copyObject statObject', function() {\n    var etag\n    var modifiedDate\n    step(`putObject(bucketName, objectName, stream, metaData, cb)_bucketName:${bucketName}, objectName:${_100kbObjectName}, stream: 100kb, metaData:${metaData}_`, done => {\n      client.putObject(bucketName, _100kbObjectName, _100kb, metaData, done)\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}_`, done => {\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    step(`statObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_100kbObjectName}_`, done => {\n      client.statObject(bucketName, _100kbObjectName, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _100kb.length) return done(new Error('size mismatch'))\n        if (Object.keys(stat.metaData).length !== Object.keys(metaData).length) return done(new Error('content-type mismatch'))\n        assert.equal(stat.metaData['content-type'], metaData['Content-Type'])\n        assert.equal(stat.metaData['Testing'], metaData['Testing'])\n        assert.equal(stat.metaData['randomstuff'], metaData['randomstuff'])\n        etag = stat.etag\n        modifiedDate = stat.modifiedDate\n        done()\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:ExceptIncorrectEtag_`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setMatchETagExcept('TestEtag')\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:ExceptCorrectEtag_`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setMatchETagExcept(etag)\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds)\n        .then(() => {\n          done(new Error(\"CopyObject should have failed.\"))\n        })\n        .catch(() => done())\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:MatchCorrectEtag_`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setMatchETag(etag)\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:MatchIncorrectEtag_`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setMatchETag('TestETag')\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds)\n        .then(() => {\n          done(new Error(\"CopyObject should have failed.\"))\n        })\n        .catch(() => done())\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:Unmodified since ${modifiedDate}`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setUnmodified(new Date(modifiedDate))\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds, (e) => {\n        if (e) return done(e)\n        done()\n      })\n    })\n\n    step(`copyObject(bucketName, objectName, srcObject, conditions, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}, srcObject:/${bucketName}/${_100kbObjectName}, conditions:Unmodified since 2010-03-26T12:00:00Z_`, done => {\n      var conds = new minio.CopyConditions()\n      conds.setUnmodified(new Date(\"2010-03-26T12:00:00Z\"))\n      client.copyObject(bucketName, _100kbObjectNameCopy, \"/\" + bucketName + \"/\" + _100kbObjectName, conds)\n        .then(() => {\n          done(new Error(\"CopyObject should have failed.\"))\n        })\n        .catch(() => done())\n    })\n\n    step(`statObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}_`, done => {\n      client.statObject(bucketName, _100kbObjectNameCopy, (e, stat) => {\n        if (e) return done(e)\n        if (stat.size !== _100kb.length) return done(new Error('size mismatch'))\n        done()\n      })\n    })\n\n    step(`removeObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_100kbObjectNameCopy}_`, done => {\n      async.map([_100kbObjectName, _100kbObjectNameCopy], (objectName, cb) => client.removeObject(bucketName, objectName, cb), done)\n    })\n\n  })\n\n  describe('listIncompleteUploads removeIncompleteUpload', () => {\n    step(`initiateNewMultipartUpload(bucketName, objectName, metaData, cb)_bucketName:${bucketName}, objectName:${_6mbObjectName}, metaData:${metaData}`, done => {\n      client.initiateNewMultipartUpload(bucketName, _6mbObjectName, metaData, done)\n    })\n    step(`listIncompleteUploads(bucketName, prefix, recursive)_bucketName:${bucketName}, prefix:${_6mbObjectName}, recursive: true_`, function(done) {\n      // Minio's ListIncompleteUploads returns an empty list, so skip this on non-AWS.\n      // See: https://github.com/minio/minio/commit/75c43bfb6c4a2ace\n      if (!client.host.includes('s3.amazonaws.com')) {\n        this.skip()\n      }\n\n      var found = false\n      client.listIncompleteUploads(bucketName, _6mbObjectName, true)\n        .on('error', e => done(e))\n        .on('data', data => {\n          if (data.key === _6mbObjectName) found = true\n        })\n        .on('end', () => {\n          if (found) return done()\n          done(new Error(`${_6mbObjectName} not found during listIncompleteUploads`))\n        })\n    })\n    step(`listIncompleteUploads(bucketName, prefix, recursive)_bucketName:${bucketName}, recursive: true_`, function(done) {\n      // Minio's ListIncompleteUploads returns an empty list, so skip this on non-AWS.\n      // See: https://github.com/minio/minio/commit/75c43bfb6c4a2ace\n      if (!client.host.includes('s3.amazonaws.com')) {\n        this.skip()\n      }\n\n      var found = false\n      client.listIncompleteUploads(bucketName, \"\", true)\n        .on('error', e => done(e))\n        .on('data', data => {\n          if (data.key === _6mbObjectName) found = true\n        })\n        .on('end', () => {\n          if (found) return done()\n          done(new Error(`${_6mbObjectName} not found during listIncompleteUploads`))\n        })\n    })\n    step(`removeIncompleteUploads(bucketName, prefix)_bucketName:${bucketName}, prefix:${_6mbObjectName}_`, done => {\n      client.removeIncompleteUpload(bucketName, _6mbObjectName)\n        .then(done)\n        .catch(done)\n    })\n  })\n\n  describe('fPutObject fGetObject', function() {\n    var tmpFileUpload = `${tmpDir}/${_6mbObjectName}`\n    var tmpFileDownload = `${tmpDir}/${_6mbObjectName}.download`\n\n    step(`fPutObject(bucketName, objectName, filePath, callback)_bucketName:${bucketName}, objectName:${_6mbObjectName}, filePath:${tmpFileUpload}_`, done => {\n      fs.writeFileSync(tmpFileUpload, _6mb)\n      client.fPutObject(bucketName, _6mbObjectName, tmpFileUpload, done)\n    })\n\n    step(`fPutObject(bucketName, objectName, filePath, metaData, callback)_bucketName:${bucketName}, objectName:${_6mbObjectName}, filePath:${tmpFileUpload}, metaData: ${metaData}_`, done => client.fPutObject(bucketName, _6mbObjectName, tmpFileUpload, metaData, done))\n    step(`fGetObject(bucketName, objectName, filePath, callback)_bucketName:${bucketName}, objectName:${_6mbObjectName}, filePath:${tmpFileDownload}_`, done => {\n      client.fGetObject(bucketName, _6mbObjectName, tmpFileDownload)\n        .then(() => {\n          var md5sum = crypto.createHash('md5').update(fs.readFileSync(tmpFileDownload)).digest('hex')\n          if (md5sum === _6mbmd5) return done()\n          return done(new Error('md5sum mismatch'))\n        })\n        .catch(done)\n    })\n\n    step(`removeObject(bucketName, objectName, filePath, callback)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, done => {\n      fs.unlinkSync(tmpFileDownload)\n      client.removeObject(bucketName, _6mbObjectName)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`fPutObject(bucketName, objectName, filePath, metaData)_bucketName:${bucketName}, objectName:${_6mbObjectName}, filePath:${tmpFileUpload}_`, done => {\n      client.fPutObject(bucketName, _6mbObjectName, tmpFileUpload)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`fGetObject(bucketName, objectName, filePath)_bucketName:${bucketName}, objectName:${_6mbObjectName}, filePath:${tmpFileDownload}_`, done => {\n      client.fGetObject(bucketName, _6mbObjectName, tmpFileDownload)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`removeObject(bucketName, objectName, filePath, callback)_bucketName:${bucketName}, objectName:${_6mbObjectName}_`, (done) => {\n      fs.unlinkSync(tmpFileUpload)\n      fs.unlinkSync(tmpFileDownload)\n      client.removeObject(bucketName, _6mbObjectName, done)\n    })\n  })\n  describe('fGetObject-resume', () => {\n    var localFile = `${tmpDir}/${_5mbObjectName}`\n    step(`putObject(bucketName, objectName, stream, metaData, cb)_bucketName:${bucketName}, objectName:${_5mbObjectName}, stream:5mb_`, done => {\n      var stream = readableStream(_5mb)\n      client.putObject(bucketName, _5mbObjectName, stream, _5mb.length, {}, done)\n    })\n    step(`fGetObject(bucketName, objectName, filePath, callback)_bucketName:${bucketName}, objectName:${_5mbObjectName}, filePath:${localFile}`, done => {\n      var tmpFile = `${tmpDir}/${_5mbObjectName}.${_5mbmd5}.part.minio`\n      // create a partial file\n      fs.writeFileSync(tmpFile, _100kb)\n      client.fGetObject(bucketName, _5mbObjectName, localFile)\n        .then(() => {\n          var md5sum = crypto.createHash('md5').update(fs.readFileSync(localFile)).digest('hex')\n          if (md5sum === _5mbmd5) return done()\n          return done(new Error('md5sum mismatch'))\n        })\n        .catch(done)\n    })\n    step(`removeObject(bucketName, objectName, callback)_bucketName:${bucketName}, objectName:${_5mbObjectName}_`, done => {\n      fs.unlinkSync(localFile)\n      client.removeObject(bucketName, _5mbObjectName, done)\n    })\n  })\n\n  describe('bucket policy', () => {\n    let policy = `{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"s3:GetBucketLocation\",\"s3:ListBucket\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Resource\":[\"arn:aws:s3:::${bucketName}\"],\"Sid\":\"\"},{\"Action\":[\"s3:GetObject\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"*\"]},\"Resource\":[\"arn:aws:s3:::${bucketName}/*\"],\"Sid\":\"\"}]}`\n\n    step(`setBucketPolicy(bucketName, bucketPolicy, cb)_bucketName:${bucketName}, bucketPolicy:${policy}_`, done => {\n      client.setBucketPolicy(bucketName, policy, err => {\n        if (err && err.code == 'NotImplemented') return done()\n        if (err) return done(err)\n        done()\n      })\n    })\n\n    step(`getBucketPolicy(bucketName, cb)_bucketName:${bucketName}_`, done => {\n      client.getBucketPolicy(bucketName, (err, response) => {\n        if (err && err.code == 'NotImplemented') return done()\n        if (err) return done(err)\n        if (!response) {\n          return done(new Error(`policy is empty`))\n        }\n        done()\n      })\n    })\n  })\n\n  describe('presigned operations', () => {\n    step(`presignedPutObject(bucketName, objectName, expires, cb)_bucketName:${bucketName}, objectName:${_1byteObjectName}, expires: 1000_`, done => {\n      client.presignedPutObject(bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'PUT'\n        options.headers = {\n          'content-length': _1byte.length\n        }\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          response.on('error', e => done(e))\n          response.on('end', () => done())\n          response.on('data', () => {})\n        })\n        request.on('error', e => done(e))\n        request.write(_1byte)\n        request.end()\n      })\n    })\n\n    step(`presignedPutObject(bucketName, objectName, expires)_bucketName:${bucketName}, objectName:${_1byteObjectName}, expires:-123_`, done => {\n      // negative values should trigger an error\n      client.presignedPutObject(bucketName, _1byteObjectName, -123)\n        .then(() => {\n          done(new Error('negative values should trigger an error'))\n        })\n        .catch(() => done())\n    })\n\n    step(`presignedPutObject(bucketName, objectName)_bucketName:${bucketName}, objectName:${_1byteObjectName}_`, done => {\n      // Putting the same object should not cause any error\n      client.presignedPutObject(bucketName, _1byteObjectName)\n        .then(() => done())\n        .catch(done)\n    })\n\n    step(`presignedGetObject(bucketName, objectName, expires, cb)_bucketName:${bucketName}, objectName:${_1byteObjectName}, expires:1000_`, done => {\n      client.presignedGetObject(bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          var error = null\n          response.on('error', e => done(e))\n          response.on('end', () => done(error))\n          response.on('data', (data) => {\n            if (data.toString() !== _1byte.toString()) {\n              error = new Error('content mismatch')\n            }\n          })\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    step(`presignedUrl(httpMethod, bucketName, objectName, expires, cb)_httpMethod:GET, bucketName:${bucketName}, objectName:${_1byteObjectName}, expires:1000_`, done => {\n      client.presignedUrl('GET', bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          var error = null\n          response.on('error', e => done(e))\n          response.on('end', () => done(error))\n          response.on('data', (data) => {\n            if (data.toString() !== _1byte.toString()) {\n              error = new Error('content mismatch')\n            }\n          })\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    step(`presignedGetObject(bucketName, objectName, cb)_bucketName:${bucketName}, objectName:${_1byteObjectName}_`, done => {\n      client.presignedGetObject(bucketName, _1byteObjectName, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          var error = null\n          response.on('error', e => done(e))\n          response.on('end', () => done(error))\n          response.on('data', (data) => {\n            if (data.toString() !== _1byte.toString()) {\n              error = new Error('content mismatch')\n            }\n          })\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    step(`presignedGetObject(bucketName, objectName, expires)_bucketName:${bucketName}, objectName:this.does.not.exist, expires:2938_`, done => {\n      client.presignedGetObject(bucketName, 'this.does.not.exist', 2938)\n        .then(assert.fail)\n        .catch(() => done())\n    })\n\n    step(`presignedGetObject(bucketName, objectName, expires, respHeaders, cb)_bucketName:${bucketName}, objectName:${_1byteObjectName}, expires:1000_`, done => {\n      var respHeaders = {\n        'response-content-type': 'text/html',\n        'response-content-language': 'en',\n        'response-expires': 'Sun, 07 Jun 2020 16:07:58 GMT',\n        'response-cache-control': 'No-cache',\n        'response-content-disposition': 'attachment; filename=testing.txt',\n        'response-content-encoding': 'gzip'\n      }\n      client.presignedGetObject(bucketName, _1byteObjectName, 1000, respHeaders, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 200) return done(new Error(`error on get : ${response.statusCode}`))\n          if (respHeaders['response-content-type'] != response.headers['content-type']) {\n            return done(new Error(`content-type header mismatch`))\n          }\n          if (respHeaders['response-content-language'] != response.headers['content-language']) {\n            return done(new Error(`content-language header mismatch`))\n          }\n          if (respHeaders['response-expires'] != response.headers['expires']) {\n            return done(new Error(`expires header mismatch`))\n          }\n          if (respHeaders['response-cache-control'] != response.headers['cache-control']) {\n            return done(new Error(`cache-control header mismatch`))\n          }\n          if (respHeaders['response-content-disposition'] != response.headers['content-disposition']) {\n            return done(new Error(`content-disposition header mismatch`))\n          }\n          if (respHeaders['response-content-encoding'] != response.headers['content-encoding']) {\n            return done(new Error(`content-encoding header mismatch`))\n          }\n          response.on('data', () => {})\n          done()\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n\n    step('presignedPostPolicy(postPolicy, cb)_postPolicy:expiresin10days_', done => {\n      var policy = client.newPostPolicy()\n      policy.setKey(_1byteObjectName)\n      policy.setBucket(bucketName)\n      var expires = new Date\n      expires.setSeconds(24 * 60 * 60 * 10)\n      policy.setExpires(expires)\n\n      client.presignedPostPolicy(policy, (e, data) => {\n        if (e) return done(e)\n        var req = superagent.post(data.postURL)\n        _.each(data.formData, (value, key) => req.field(key, value))\n        req.attach('file', new Buffer([_1byte]), 'test')\n        req.end(function(e) {\n          if (e) return done(e)\n          done()\n        })\n        req.on('error', e => done(e))\n      })\n    })\n\n    step('presignedPostPolicy(postPolicy)_postPolicy: null_', done => {\n      client.presignedPostPolicy(null)\n        .then(() => {\n          done(new Error('null policy should fail'))\n        })\n        .catch(() => done())\n    })\n\n    step(`presignedUrl(httpMethod, bucketName, objectName, expires, reqParams, cb)_httpMethod:GET, bucketName:${bucketName}, expires:1000_`, done => {\n      client.presignedUrl('GET', bucketName, '', 1000, {'prefix': 'data', 'max-keys': 1000}, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'GET'\n        options.headers = {\n        }\n        var str = ''\n        if (options.protocol === 'https:') transport = https\n        var callback = function (response) {\n          if (response.statusCode !== 200) return done(new Error(`error on put : ${response.statusCode}`))\n          response.on('error', e => done(e))\n          response.on('end', function () {\n            if (!str.match(`<Key>${_1byteObjectName}</Key>`)) {\n              return done(new Error('Listed object does not match the object in the bucket!'))\n            }\n            done()\n          })\n          response.on('data', function (chunk) {\n            str += chunk\n          })\n        }\n        var request = transport.request(options, callback)\n        request.end()\n      })\n    })\n\n    step(`presignedUrl(httpMethod, bucketName, objectName, expires, cb)_httpMethod:DELETE, bucketName:${bucketName}, objectName:${_1byteObjectName}, expires:1000_`, done => {\n      client.presignedUrl('DELETE', bucketName, _1byteObjectName, 1000, (e, presignedUrl) => {\n        if (e) return done(e)\n        var transport = http\n        var options = _.pick(url.parse(presignedUrl), ['hostname', 'port', 'path', 'protocol'])\n        options.method = 'DELETE'\n        options.headers = {\n        }\n        if (options.protocol === 'https:') transport = https\n        var request = transport.request(options, (response) => {\n          if (response.statusCode !== 204) return done(new Error(`error on put : ${response.statusCode}`))\n          response.on('error', e => done(e))\n          response.on('end', () => done())\n          response.on('data', () => {})\n        })\n        request.on('error', e => done(e))\n        request.end()\n      })\n    })\n  })\n\n  describe('listObjects', function() {\n    var listObjectPrefix = 'miniojsPrefix'\n    var listObjectsNum = 10\n    var objArray = []\n    var listArray = []\n    var listPrefixArray = []\n\n    step(`putObject(bucketName, objectName, stream, size, metaData, callback)_bucketName:${bucketName}, stream:1b, size:1_Create ${listObjectsNum} objects`, done => {\n      _.times(listObjectsNum, i => objArray.push(`${listObjectPrefix}.${i}`))\n      objArray = objArray.sort()\n      async.mapLimit(\n        objArray,\n        20,\n        (objectName, cb) => client.putObject(bucketName, objectName, readableStream(_1byte), _1byte.length, {}, cb),\n        done\n      )\n    })\n\n    step(`listObjects(bucketName, prefix, recursive)_bucketName:${bucketName}, prefix: miniojsprefix, recursive:true_`, done => {\n      client.listObjects(bucketName, listObjectPrefix, true)\n        .on('error', done)\n        .on('end', () => {\n          if (_.isEqual(objArray, listPrefixArray)) return done()\n          return done(new Error(`listObjects lists ${listPrefixArray.length} objects, expected ${listObjectsNum}`))\n        })\n        .on('data', data => {\n          listPrefixArray.push(data.name)\n        })\n    })\n\n    step('listObjects(bucketName, prefix, recursive)_recursive:true_', done => {\n      try {\n        client.listObjects(\"\", \"\", true)\n          .on('end', () => {\n            return done(new Error(`listObjects should throw exception when empty bucketname is passed`))\n          })\n      } catch (e) {\n        if (e.name == 'InvalidBucketNameError') {\n          done()\n        } else {\n          done(e)\n        }\n      }\n    })\n\n    step(`listObjects(bucketName, prefix, recursive)_bucketName:${bucketName}, recursive:false_`, done => {\n      client.listObjects(bucketName, '', false)\n        .on('error', done)\n        .on('end', () => {\n          if (_.isEqual(objArray, listArray)) return done()\n          return done(new Error(`listObjects lists ${listArray.length} objects, expected ${listObjectsNum}`))\n        })\n        .on('data', data => {\n          listArray.push(data.name)\n        })\n    })\n\n    step(`listObjectsV2(bucketName, prefix, recursive)_bucketName:${bucketName}, recursive:true_`, done => {\n      listArray = []\n      client.listObjectsV2(bucketName, '', true)\n        .on('error', done)\n        .on('end', () => {\n          if (_.isEqual(objArray, listArray)) return done()\n          return done(new Error(`listObjects lists ${listArray.length} objects, expected ${listObjectsNum}`))\n        })\n        .on('data', data => {\n          listArray.push(data.name)\n        })\n    })\n\n    step(`removeObject(bucketName, objectName, callback)_bucketName:${bucketName}_Remove ${listObjectsNum} objects`, done => {\n      async.mapLimit(\n        listArray,\n        20,\n        (objectName, cb) => client.removeObject(bucketName, objectName, cb),\n        done\n      )\n    })\n  })\n\n  function readableStream(data) {\n    var s = new stream.Readable()\n    s._read = () => {}\n    s.push(data)\n    s.push(null)\n    return s\n  }\n\n  describe('removeObjects', function() {\n    var listObjectPrefix = 'miniojsPrefix'\n    var listObjectsNum = 10\n    var objArray = []\n    var objectsList = []\n\n    step(`putObject(bucketName, objectName, stream, size, contentType, callback)_bucketName:${bucketName}, stream:1b, size:1_Create ${listObjectsNum} objects`, done => {\n      _.times(listObjectsNum, i => objArray.push(`${listObjectPrefix}.${i}`))\n      objArray = objArray.sort()\n      async.mapLimit(\n        objArray,\n        20,\n        (objectName, cb) => client.putObject(bucketName, objectName, readableStream(_1byte), _1byte.length, '', cb),\n        done\n      )\n    })\n\n    step(`listObjects(bucketName, prefix, recursive)_bucketName:${bucketName}, recursive:false_`, done => {\n      client.listObjects(bucketName, listObjectPrefix, false)\n        .on('error', done)\n        .on('end', () => {\n          try {\n            client.removeObjects(bucketName, '',function(e) {\n              if (e) {\n                done()\n              }\n            })\n          } catch (e) {\n            if (e.name === \"InvalidArgumentError\") {\n              done()\n            }\n          }\n        })\n        .on('data', data => {\n          objectsList.push(data.name)\n        })\n    })\n\n    objectsList = []\n\n    step(`listObjects(bucketName, prefix, recursive)_bucketName:${bucketName}, recursive:false_`, done => {\n      client.listObjects(bucketName, listObjectPrefix, false)\n        .on('error', done)\n        .on('end', () => {\n          client.removeObjects(bucketName, objectsList,function(e) {\n            if (e) {\n              done(e)\n            }\n            done()\n          })\n        })\n        .on('data', data => {\n          objectsList.push(data.name)\n        })\n    })\n\n  })\n\n\n  describe('bucket notifications', () => {\n    describe('#listenBucketNotification', () => {\n      before(function() {\n        // listenBucketNotification only works on Minio, so skip if\n        // the host is Amazon.\n        if (client.host.includes('s3.amazonaws.com')) {\n          this.skip()\n        }\n      })\n\n      step(`listenBucketNotification(bucketName, prefix, suffix, events)_bucketName:${bucketName}, prefix:photos/, suffix:.jpg, events:bad_`, done => {\n        let poller = client.listenBucketNotification(bucketName, 'photos/', '.jpg', ['bad'])\n        poller.on('error', error => {\n          if (error.code != 'NotImplemented') {\n            assert.match(error.message, /A specified event is not supported for notifications./)\n            assert.equal(error.code, 'InvalidArgument')\n          }\n          done()\n        })\n      })\n      step(`listenBucketNotification(bucketName, prefix, suffix, events)_bucketName:${bucketName}, events: s3:ObjectCreated:*_`, done => {\n        let poller = client.listenBucketNotification(bucketName, '', '', ['s3:ObjectCreated:*'])\n        let records = 0\n        let pollerError = null\n        poller.on('notification', record => {\n          records++\n\n          assert.equal(record.eventName, 's3:ObjectCreated:Put')\n          assert.equal(record.s3.bucket.name, bucketName)\n          assert.equal(record.s3.object.key, objectName)\n        })\n        poller.on('error', error => {\n          pollerError = error\n        })\n        setTimeout(() => { // Give it some time for the notification to be setup.\n          if (pollerError) {\n            if (pollerError.code != 'NotImplemented') {\n              done(pollerError)\n            } else {\n              done()\n            }\n            return\n          }\n          client.putObject(bucketName, objectName, 'stringdata', (err) => {\n            if (err) return done(err)\n            setTimeout(() => { // Give it some time to get the notification.\n              poller.stop()\n              client.removeObject(bucketName, objectName, err => {\n                if (err) return done(err)\n                if (!records) return done(new Error('notification not received'))\n                done()\n              })\n            }, 10 * 1000)\n          })\n        }, 10*1000)\n      })\n\n      // This test is very similar to that above, except it does not include\n      // Minio.ObjectCreatedAll in the config. Thus, no events should be emitted.\n      step(`listenBucketNotification(bucketName, prefix, suffix, events)_bucketName:${bucketName}, events:s3:ObjectRemoved:*`, done => {\n        let poller = client.listenBucketNotification(bucketName, '', '', ['s3:ObjectRemoved:*'])\n        poller.on('notification', assert.fail)\n        poller.on('error', error => {\n          if (error.code != 'NotImplemented') {\n            done(error)\n          }\n        })\n\n        client.putObject(bucketName, objectName, 'stringdata', (err) => {\n          if (err) return done(err)\n          // It polls every five seconds, so wait for two-ish polls, then end.\n          setTimeout(() => {\n            poller.stop()\n            poller.removeAllListeners('notification')\n            // clean up object now\n            client.removeObject(bucketName, objectName, done)\n          }, 11 * 1000)\n        })\n      })\n    })\n  })\n})\n"]}